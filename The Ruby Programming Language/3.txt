-------------------------------------------------------------------------------
В Ruby имеется пять встроенных классов для представления чисел, а стандартная
библиотека включает еще три числовых класса, которые в отдельных случаях тоже
могут оказаться полезными.

                         +---------+
                         | Numeric |
                         +----+----+
                              |
     +-----------+------------+---------------+--------------+
     |           |            |               |              |
+----+----+  +---+---+  +-----+-----+  +------+-----+  +-----+-----+
| Integer |  | Float |  |  Complex  |  | BigDecimal |  | Rational  |
+----+----+  +-------+  | (Std Lib) |  |  (Std Lib) |  | (Std Lib) |
     |                  +-----------+  +------------+  +-----------+
     +----------+
     |          |
+----+---+ +----+---+
| Fixnum | | Bignum |
+--------+ +--------+

Все числовые объекты в Ruby являются экземплярами класса Numeric. Все
целочисленные объекты - экземплярами класса Integer. Если целочисленное
значение умещается в 31 бит, объект является экземпляром класса Fixnum. В инном
случае этот объект является экземпляром класса Bignum. Классы Complex, BigDecimal
и Rational не встроены в Ruby, но распростарняются вместе с ним как часть
стандартной библиотеки. Все числовые объекты являются неизменяемыми.
-------------------------------------------------------------------------------
Целочисленные литералы - это простая последовательность цифр:

0
123
1234567890134
1_000_000_000

Числа начинающиеся с 0x или 0X, являются шестнадцатеричными (по основанию 16),
и в них в качестве цифр от 10 до 15 используются буквы от a до f (или от A до F).
Числа, начинающиеся с 0b или 0B, являются двоичными (по основанию 2) и включают
в себя только цифры 0 и 1. Числа начинающиеся с 0 и не имеющие последующей буквы
являются восьмеричными (по основанию 8) и должны состоять из цифр от 0 до 7.

0377        # Восьмеричное представление числа 255
0b1111_1111 # Двоичное представление числа 255
0xFF        # Шестнадцатеричное представление числа 255
-------------------------------------------------------------------------------
Литералы чисел с плавающей точкой:

0.0
-3.14
6.02e23      # Это означает 6.02 x 10^23
1_000_000.01 # Число чуть больше миллиона
-------------------------------------------------------------------------------
x = 5/2   # Результат - 2
x = 5.0/2 # Результат - 2.5
x = 5/2.5 # Результат - 2.5

x = 1/0     # Возвращает ZeroDivisionError
x = 1.0/0   # Возвращает Infinity (бесконечность)
x = 0.0/0.0 # Возвращает NaN (Not a Number)

x = 5 % 2     # Результат - 1
x = 1.5 % 0.4 # Результат - 0.3

Важным следствием определения целочисленного деления в Ruby является то, что в
нем -a/b равняется a/-b, но может не равнятся -(a/b).

x**4         # То же самое, что и x*x*x*x
x**-1        # То же самое, что и 1/x
x**(1/3.0)   # То же самое, что и x
x**(1/4)     # Ничего не получиться! Целочисленное деление означает, что мы имеем
             # дело с выражением, эквивалентным x**0, которое всегда равно 1
x**(1.0/4.0) # Это корень четвертой степени из x

Когда операции возведения в степень объединены в одном выражении, они вычисляются
справа налево. Поэтому 4**3**2 равно 4**9, а не 64**2.

even = (x[0] == 0) # Число является четным, если найменее значимый бит равен 0
-------------------------------------------------------------------------------

