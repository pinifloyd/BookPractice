-------------------------------------------------------------------------------
Выражение представляет собой фрагмент Ruby-кода, который Ruby-интерпретатор
может вычислить, чтобы выдать какое-нибудь значение.
-------------------------------------------------------------------------------
Переменная - это всего лишь имя для значения. Если имя переменной появляется в
программе не в левой части присваивания, а где-нибудь в другом месте, то это
считается ссылкой на переменную, которая вычисляется в значение переменной.
-------------------------------------------------------------------------------
Неинициализированные переменные. Правила:

Переменные класса:
  Переменные класса перед своим использованием всегда должны иметь присвоенные
им значения. Если сослаться на переменную класса, которй не ыло присвоено
значение, Ruby выдаст ошибку имени - NameError.

Переменные экземпляра:
  Если сослаться на неинициализированную переменную экземпляра, Ruby вернет nil.

Глобальные переменные:
  Подобны тем же переменным экземпляра: они вычисляются в nil, но это приводит
к предупреждению, если Ruby запущен с ключом -w.

Локальные переменные:
  Если Ruby-интерпретатор уже присваивал значение локальной переменной, то он
знает, что это не метод, а переменная, и может вернуть значение переменной. Если
присваивания не было, то тогда Ruby рассматривает выражение как вызов метода.
Если метода с таким именем не существует, Ruby выдаст ошибку имени - NameError.
-------------------------------------------------------------------------------
Константы в Ruby похожи на переменные, за исключением того, что их значения, как
предполагается, остаются постоянными на всем протяжении работы программы. Ссылки
на константы являются выражениями, которые вычисляются в значения указанных
констант.
-------------------------------------------------------------------------------
