Cucumber имеет возможность раздавать теги для последующей выборки по ним.
Теги начинаться с символа @ (@slow).

@nightly @slow
Feature: Nightly Reports

  @widgets
  Scenario: Generate overnight widgets report
  ...
  
  @doofers
  Scenario: Generate overnight doofers report
  ...
  
У сценариев (Scenario) будут родительские теги плюс свои. Затем мы можем
запустить тесты для определенных тегов:

$ cucumber --tags @doofers
-------------------------------------------------------------------------------
Для каждого сценария (Scenario) создается каждый раз новый мир (World), который
удаляется по окончании сценария (Scenario).

* Трансформации (Transform) помогают избежать повторений в коде при захвате
  аргументов. Также они дают имена регулярным выражениям.
* Код поддержки шагов (step_definitions) можно хранить в features/support,
  который загружается перед шагами (step_definitions).
* Файл features/support/env.rb загружается самым первым, тут мы говорим что и
  как грузить. Он не грузиться в dry-run.
* Хорошая практика организовывать шаги (step_definition files) по одному файлу
  на объект (модель и так далее).
* Можно подмешивать модули для расширения и передачи значений в World.
-------------------------------------------------------------------------------
Хуки работают для каждого сценария. Но если мы хотим чтобы они работали для
конкретного сценария, нужно поставить тег на сценарий и запустить хук для этого
тега.

Хуки: Before, After, Around.
-------------------------------------------------------------------------------
Поддержка Delayed Job:

module DelayedJobSupport
  def process_all_jobs
    Delayed::Worker.new.work_off(Delayed::Job.count)
    if ENV['FAIL_FAST']
      raise Delayed::Job.first.last_error if Delayed::Job.count > 0
    end
  end
end

World(DelayedJobSupport)

$ cucumber features/background_jobs.feature FAIL_FAST=1
-------------------------------------------------------------------------------
Вызов по тегам:

$ cucumber --tags @focus
$ cucumber --tags @focus, @email                                          (или)
$ cucumber --tags @fast --tags @focus,@email                      ("и" и "или")
$ cucumber --tags ~@slow --tags @focus,@email                       (~ -> "не")

Вызов по строкам:

$ cucumber features/something.feature --line 45
$ cucumber features/something.feature:45
$ cucumber features/something.feature:45:89:107

Вызов по именам:

$ cucumber --name logout
-------------------------------------------------------------------------------
Меняем вывод:

$ cucumber --format progress
#=> ..U--..F..
• . means passing.
• U means undefined.
• - means skipped (or a Scenario Outline step).
• F means failing.

$ cucumber -f pretty -f html --out cukes.html -f rerun --out rerun.txt
-------------------------------------------------------------------------------
Организация файлов:

features
  ├── billing
  │   └── credit_card.feature
  ├── scoring
  │   ├── multi_player.feature
  │   └── single_player.feature
  └── step_definitions
      ├── billing_steps.rb
      └── scoring_steps.rb
-------------------------------------------------------------------------------